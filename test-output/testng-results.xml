<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="5" ignored="5" total="36" passed="21" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-03T23:41:26 IST" name="SauceDemo Automation Suite" finished-at="2025-10-03T23:55:41 IST" duration-ms="854960">
    <groups>
    </groups>
    <test started-at="2025-10-03T23:41:26 IST" name="EDGE Standard Tests" finished-at="2025-10-03T23:55:41 IST" duration-ms="854960">
      <class name="com.sauceDemo.testCases.TC006_LoginDDTTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:28 IST" name="setup" finished-at="2025-10-03T23:45:31 IST" duration-ms="2843" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:31 IST" name="testLoginDataDrivenTest" description="Data-driven test for various login scenarios" data-provider="loginData" finished-at="2025-10-03T23:45:43 IST" duration-ms="11895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginDataDrivenTest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:43 IST" name="teardown" finished-at="2025-10-03T23:45:44 IST" duration-ms="912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginDataDrivenTest status=SUCCESS method=TC006_LoginDDTTest.testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:44 IST" name="setup" finished-at="2025-10-03T23:45:47 IST" duration-ms="3080" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:47 IST" name="testLoginDataDrivenTest" description="Data-driven test for various login scenarios" data-provider="loginData" finished-at="2025-10-03T23:45:49 IST" duration-ms="1852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginDataDrivenTest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:49 IST" name="teardown" finished-at="2025-10-03T23:45:50 IST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginDataDrivenTest status=SUCCESS method=TC006_LoginDDTTest.testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:50 IST" name="setup" finished-at="2025-10-03T23:45:52 IST" duration-ms="2713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:45:52 IST" name="testLoginDataDrivenTest" description="Data-driven test for various login scenarios" data-provider="loginData" finished-at="2025-10-03T23:46:05 IST" duration-ms="12067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginDataDrivenTest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:05 IST" name="teardown" finished-at="2025-10-03T23:46:06 IST" duration-ms="1204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginDataDrivenTest status=SUCCESS method=TC006_LoginDDTTest.testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:06 IST" name="setup" finished-at="2025-10-03T23:46:08 IST" duration-ms="2691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:08 IST" name="testLoginDataDrivenTest" description="Data-driven test for various login scenarios" data-provider="loginData" finished-at="2025-10-03T23:46:25 IST" duration-ms="16968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Success]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginDataDrivenTest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:25 IST" name="teardown" finished-at="2025-10-03T23:46:26 IST" duration-ms="816" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginDataDrivenTest status=SUCCESS method=TC006_LoginDDTTest.testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:26 IST" name="setup" finished-at="2025-10-03T23:46:30 IST" duration-ms="3259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:30 IST" name="testLoginDataDrivenTest" description="Data-driven test for various login scenarios" data-provider="loginData" finished-at="2025-10-03T23:46:31 IST" duration-ms="1965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invalid_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong_password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginDataDrivenTest -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447]" started-at="2025-10-03T23:46:31 IST" name="teardown" finished-at="2025-10-03T23:46:32 IST" duration-ms="692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginDataDrivenTest status=SUCCESS method=TC006_LoginDDTTest.testLoginDataDrivenTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.sauceDemo.testCases.TC006_LoginDDTTest@6cf31447] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC006_LoginDDTTest -->
      <class name="com.sauceDemo.testCases.TC011_CustomExceptionDemoTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:53:21 IST" name="setup" finished-at="2025-10-03T23:53:23 IST" duration-ms="2532" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method retried="true" signature="demonstrateCustomExceptions()[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:53:23 IST" name="demonstrateCustomExceptions" description="Demonstrate custom exception handling for ElementNotFound and AutomationFlow issues." finished-at="2025-10-03T23:53:46 IST" duration-ms="22439" status="SKIP">
          <exception class="com.sauceDemo.exceptions.ElementNotFoundException">
            <message>
              <![CDATA[Failed to find expected element with ID 'nonExistentElementID123' on the Products Page. This element is critical for the test flow.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.sauceDemo.exceptions.ElementNotFoundException: Failed to find expected element with ID 'nonExistentElementID123' on the Products Page. This element is critical for the test flow.
at com.sauceDemo.testCases.TC011_CustomExceptionDemoTest.demonstrateCustomExceptions(TC011_CustomExceptionDemoTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#nonExistentElementID123"}
  (Session info: chrome=140.0.7339.208)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [32ea82c98211f4806e07cf44c8514dae, findElement {using=id, value=nonExistentElementID123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.208, chrome: {chromedriverVersion: 140.0.7339.207 (17230b545fd..., userDataDir: C:\Users\anant\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50203}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50203/devtoo..., se:cdpVersion: 140.0.7339.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 32ea82c98211f4806e07cf44c8514dae
at jdk.internal.reflect.GeneratedConstructorAccessor31.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at com.sauceDemo.testCases.TC011_CustomExceptionDemoTest.demonstrateCustomExceptions(TC011_CustomExceptionDemoTest.java:48)
... 27 more
]]>
            </full-stacktrace>
          </exception> <!-- com.sauceDemo.exceptions.ElementNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demonstrateCustomExceptions -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:53:46 IST" name="teardown" finished-at="2025-10-03T23:53:47 IST" duration-ms="834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demonstrateCustomExceptions status=SKIP method=TC011_CustomExceptionDemoTest.demonstrateCustomExceptions()[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:53:47 IST" name="setup" finished-at="2025-10-03T23:53:49 IST" duration-ms="2739" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="demonstrateCustomExceptions()[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:53:49 IST" name="demonstrateCustomExceptions" description="Demonstrate custom exception handling for ElementNotFound and AutomationFlow issues." finished-at="2025-10-03T23:54:11 IST" duration-ms="21996" status="FAIL">
          <exception class="com.sauceDemo.exceptions.ElementNotFoundException">
            <message>
              <![CDATA[Failed to find expected element with ID 'nonExistentElementID123' on the Products Page. This element is critical for the test flow.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.sauceDemo.exceptions.ElementNotFoundException: Failed to find expected element with ID 'nonExistentElementID123' on the Products Page. This element is critical for the test flow.
at com.sauceDemo.testCases.TC011_CustomExceptionDemoTest.demonstrateCustomExceptions(TC011_CustomExceptionDemoTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#nonExistentElementID123"}
  (Session info: chrome=140.0.7339.208)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7df47d3586c638c0afbf8a303477f026, findElement {using=id, value=nonExistentElementID123}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.208, chrome: {chromedriverVersion: 140.0.7339.207 (17230b545fd..., userDataDir: C:\Users\anant\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50260}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50260/devtoo..., se:cdpVersion: 140.0.7339.208, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7df47d3586c638c0afbf8a303477f026
at jdk.internal.reflect.GeneratedConstructorAccessor31.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at com.sauceDemo.testCases.TC011_CustomExceptionDemoTest.demonstrateCustomExceptions(TC011_CustomExceptionDemoTest.java:48)
... 27 more
]]>
            </full-stacktrace>
          </exception> <!-- com.sauceDemo.exceptions.ElementNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demonstrateCustomExceptions -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211]" started-at="2025-10-03T23:54:12 IST" name="teardown" finished-at="2025-10-03T23:54:12 IST" duration-ms="882" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demonstrateCustomExceptions status=FAILURE method=TC011_CustomExceptionDemoTest.demonstrateCustomExceptions()[pri:0, instance:com.sauceDemo.testCases.TC011_CustomExceptionDemoTest@dcc6211] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC011_CustomExceptionDemoTest -->
      <class name="com.sauceDemo.testCases.TC007_DashboardMenuTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC007_DashboardMenuTest@1f966492]" started-at="2025-10-03T23:46:32 IST" name="setup" finished-at="2025-10-03T23:46:36 IST" duration-ms="4083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyHamburgerMenuItems()[pri:0, instance:com.sauceDemo.testCases.TC007_DashboardMenuTest@1f966492]" started-at="2025-10-03T23:46:36 IST" name="verifyHamburgerMenuItems" description="Verify all items and their text in the Dashboard Hamburger Menu." finished-at="2025-10-03T23:46:50 IST" duration-ms="13272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHamburgerMenuItems -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC007_DashboardMenuTest@1f966492]" started-at="2025-10-03T23:46:50 IST" name="teardown" finished-at="2025-10-03T23:46:50 IST" duration-ms="825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHamburgerMenuItems status=SUCCESS method=TC007_DashboardMenuTest.verifyHamburgerMenuItems()[pri:0, instance:com.sauceDemo.testCases.TC007_DashboardMenuTest@1f966492] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC007_DashboardMenuTest -->
      <class name="com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling@bc4d5e1]" started-at="2025-10-03T23:54:50 IST" name="setup" finished-at="2025-10-03T23:54:53 IST" duration-ms="2863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHyundaiWarrantyLinkWindowHandling()[pri:0, instance:com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling@bc4d5e1]" started-at="2025-10-03T23:54:53 IST" name="testHyundaiWarrantyLinkWindowHandling" description="Verify Hyundai Warranty link opens correctly in a new tab using framework utilities." finished-at="2025-10-03T23:55:35 IST" duration-ms="41899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHyundaiWarrantyLinkWindowHandling -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling@bc4d5e1]" started-at="2025-10-03T23:55:35 IST" name="teardown" finished-at="2025-10-03T23:55:35 IST" duration-ms="825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHyundaiWarrantyLinkWindowHandling status=SUCCESS method=TC013_HyundaiWarrantyWindowHandling.testHyundaiWarrantyLinkWindowHandling()[pri:0, instance:com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling@bc4d5e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC013_HyundaiWarrantyWindowHandling -->
      <class name="com.sauceDemo.testCases.TC002_ProductTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:23 IST" name="setup" finished-at="2025-10-03T23:42:26 IST" duration-ms="3327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="loginBeforeProductTests()[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:26 IST" name="loginBeforeProductTests" finished-at="2025-10-03T23:42:38 IST" duration-ms="11971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBeforeProductTests -->
        <test-method signature="testAddSingleProductToCart()[pri:1, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:38 IST" name="testAddSingleProductToCart" description="Verify adding a single product to cart" finished-at="2025-10-03T23:42:39 IST" duration-ms="644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSingleProductToCart -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:39 IST" name="teardown" finished-at="2025-10-03T23:42:40 IST" duration-ms="865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddSingleProductToCart status=SUCCESS method=TC002_ProductTest.testAddSingleProductToCart()[pri:1, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:40 IST" name="setup" finished-at="2025-10-03T23:42:43 IST" duration-ms="3164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="loginBeforeProductTests()[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:43 IST" name="loginBeforeProductTests" finished-at="2025-10-03T23:42:55 IST" duration-ms="11922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBeforeProductTests -->
        <test-method signature="testAddMultipleProductsToCart()[pri:2, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:55 IST" name="testAddMultipleProductsToCart" description="Verify adding multiple products to cart (example for another product)" finished-at="2025-10-03T23:42:55 IST" duration-ms="582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMultipleProductsToCart -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962]" started-at="2025-10-03T23:42:55 IST" name="teardown" finished-at="2025-10-03T23:42:57 IST" duration-ms="1155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddMultipleProductsToCart status=SUCCESS method=TC002_ProductTest.testAddMultipleProductsToCart()[pri:2, instance:com.sauceDemo.testCases.TC002_ProductTest@5a67e962] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC002_ProductTest -->
      <class name="com.sauceDemo.testCases.TC014_EnhancedLoginTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC014_EnhancedLoginTest@6b63abdc]" started-at="2025-10-03T23:55:35 IST" name="setup" finished-at="2025-10-03T23:55:38 IST" duration-ms="2841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testEnhancedLogin()[pri:0, instance:com.sauceDemo.testCases.TC014_EnhancedLoginTest@6b63abdc]" started-at="2025-10-03T23:55:38 IST" name="testEnhancedLogin" description="Verify login with enhanced framework features" finished-at="2025-10-03T23:55:40 IST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnhancedLogin -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC014_EnhancedLoginTest@6b63abdc]" started-at="2025-10-03T23:55:40 IST" name="teardown" finished-at="2025-10-03T23:55:41 IST" duration-ms="681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEnhancedLogin status=SUCCESS method=TC014_EnhancedLoginTest.testEnhancedLogin()[pri:0, instance:com.sauceDemo.testCases.TC014_EnhancedLoginTest@6b63abdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC014_EnhancedLoginTest -->
      <class name="com.sauceDemo.testCases.TC001_LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:41:27 IST" name="setup" finished-at="2025-10-03T23:41:33 IST" duration-ms="6331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSuccessfulLoginUser()[pri:1, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:41:33 IST" name="testSuccessfulLoginUser" description="Verify successful login with valid credentials" finished-at="2025-10-03T23:41:46 IST" duration-ms="12584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulLoginUser -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:41:46 IST" name="teardown" finished-at="2025-10-03T23:41:47 IST" duration-ms="871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulLoginUser status=SUCCESS method=TC001_LoginTest.testSuccessfulLoginUser()[pri:1, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:41:47 IST" name="setup" finished-at="2025-10-03T23:41:49 IST" duration-ms="2836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginProblemUser()[pri:2, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:41:49 IST" name="testLoginProblemUser" description="Verify login with problem user credentials" finished-at="2025-10-03T23:42:01 IST" duration-ms="11973" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginProblemUser -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:42:01 IST" name="teardown" finished-at="2025-10-03T23:42:02 IST" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginProblemUser status=SUCCESS method=TC001_LoginTest.testLoginProblemUser()[pri:2, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:42:02 IST" name="setup" finished-at="2025-10-03T23:42:05 IST" duration-ms="2778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLoginPerformanceGlitchUser()[pri:3, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:42:05 IST" name="testLoginPerformanceGlitchUser" description="Verify login with performance glitch user credentials" finished-at="2025-10-03T23:42:22 IST" duration-ms="17063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPerformanceGlitchUser -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a]" started-at="2025-10-03T23:42:22 IST" name="teardown" finished-at="2025-10-03T23:42:23 IST" duration-ms="844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginPerformanceGlitchUser status=SUCCESS method=TC001_LoginTest.testLoginPerformanceGlitchUser()[pri:3, instance:com.sauceDemo.testCases.TC001_LoginTest@518cf84a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC001_LoginTest -->
      <class name="com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest@14f3c6fc]" started-at="2025-10-03T23:54:12 IST" name="setup" finished-at="2025-10-03T23:54:15 IST" duration-ms="2481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="demonstrateWebDriverUtils()[pri:0, instance:com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest@14f3c6fc]" started-at="2025-10-03T23:54:15 IST" name="demonstrateWebDriverUtils" description="Demonstrate usage of custom WebDriver utility methods." finished-at="2025-10-03T23:54:49 IST" duration-ms="34078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demonstrateWebDriverUtils -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest@14f3c6fc]" started-at="2025-10-03T23:54:49 IST" name="teardown" finished-at="2025-10-03T23:54:50 IST" duration-ms="822" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=demonstrateWebDriverUtils status=SUCCESS method=TC012_WebDriverUtilsDemoTest.demonstrateWebDriverUtils()[pri:0, instance:com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest@14f3c6fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC012_WebDriverUtilsDemoTest -->
      <class name="com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest@203c20cf]" started-at="2025-10-03T23:52:23 IST" name="setup" finished-at="2025-10-03T23:52:26 IST" duration-ms="3010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tc010_verifyPurchaseFlowWithBuilderData()[pri:0, instance:com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest@203c20cf]" started-at="2025-10-03T23:52:26 IST" name="tc010_verifyPurchaseFlowWithBuilderData" description="Verify end-to-end purchase flow using Test Data Builder for CheckoutInfo." finished-at="2025-10-03T23:53:20 IST" duration-ms="54361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc010_verifyPurchaseFlowWithBuilderData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest@203c20cf]" started-at="2025-10-03T23:53:20 IST" name="teardown" finished-at="2025-10-03T23:53:21 IST" duration-ms="817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc010_verifyPurchaseFlowWithBuilderData status=SUCCESS method=TC010_BuilderPatternCheckoutTest.tc010_verifyPurchaseFlowWithBuilderData()[pri:0, instance:com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest@203c20cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC010_BuilderPatternCheckoutTest -->
      <class name="com.sauceDemo.testCases.TC005_RetryAnalyzerTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:44:54 IST" name="setup" finished-at="2025-10-03T23:44:57 IST" duration-ms="2856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method retried="true" signature="testFlakyLoginAttempt()[pri:1, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:44:57 IST" name="testFlakyLoginAttempt" description="Demonstrates RetryAnalyzer functionality - designed to fail then pass" finished-at="2025-10-03T23:45:09 IST" duration-ms="12015" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Simulating a transient failure. This test should be retried!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Simulating a transient failure. This test should be retried!
at org.testng.Assert.fail(Assert.java:111)
at com.sauceDemo.testCases.TC005_RetryAnalyzerTest.testFlakyLoginAttempt(TC005_RetryAnalyzerTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlakyLoginAttempt -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:45:09 IST" name="teardown" finished-at="2025-10-03T23:45:10 IST" duration-ms="825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFlakyLoginAttempt status=SKIP method=TC005_RetryAnalyzerTest.testFlakyLoginAttempt()[pri:1, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:45:10 IST" name="setup" finished-at="2025-10-03T23:45:13 IST" duration-ms="2921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testFlakyLoginAttempt()[pri:1, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:45:13 IST" name="testFlakyLoginAttempt" description="Demonstrates RetryAnalyzer functionality - designed to fail then pass" finished-at="2025-10-03T23:45:25 IST" duration-ms="12019" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Simulating a transient failure. This test should be retried!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Simulating a transient failure. This test should be retried!
at org.testng.Assert.fail(Assert.java:111)
at com.sauceDemo.testCases.TC005_RetryAnalyzerTest.testFlakyLoginAttempt(TC005_RetryAnalyzerTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlakyLoginAttempt -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1]" started-at="2025-10-03T23:45:25 IST" name="teardown" finished-at="2025-10-03T23:45:26 IST" duration-ms="859" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFlakyLoginAttempt status=FAILURE method=TC005_RetryAnalyzerTest.testFlakyLoginAttempt()[pri:1, instance:com.sauceDemo.testCases.TC005_RetryAnalyzerTest@236134a1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC005_RetryAnalyzerTest -->
      <class name="com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest@1a28aef1]" started-at="2025-10-03T23:51:13 IST" name="setup" finished-at="2025-10-03T23:51:16 IST" duration-ms="2723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPurchaseFlowWithFakerData()[pri:0, instance:com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest@1a28aef1]" started-at="2025-10-03T23:51:16 IST" name="verifyPurchaseFlowWithFakerData" description="Verify end-to-end purchase flow using dynamically generated checkout information." finished-at="2025-10-03T23:52:22 IST" duration-ms="66078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithFakerData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest@1a28aef1]" started-at="2025-10-03T23:52:22 IST" name="teardown" finished-at="2025-10-03T23:52:23 IST" duration-ms="860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithFakerData status=SUCCESS method=TC009_DynamicCheckoutInfoTest.verifyPurchaseFlowWithFakerData()[pri:0, instance:com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest@1a28aef1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC009_DynamicCheckoutInfoTest -->
      <class name="com.sauceDemo.testCases.TC008_PurchaseFlowJson">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:46:51 IST" name="setup" finished-at="2025-10-03T23:46:55 IST" duration-ms="3389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:46:55 IST" name="verifyPurchaseFlowWithDynamicData" description="Verify end-to-end purchase flow with dynamic product and checkout data." data-provider="purchaseScenarios" finished-at="2025-10-03T23:47:41 IST" duration-ms="46033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Standard Purchase - BackPack & Bike Light]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PurchaseScenario{scenarioName='Standard Purchase - BackPack & Bike Light', productsToAdd=[Sauce Labs Backpack, Sauce Labs Bike Light], checkoutDetails=CheckoutDetails{firstName='John', lastName='Doe', zipCode='12345'}, expectedItemTotal='39.98', expectedTax='3.20', expectedGrandTotal='43.18', expectedConfirmationMessage='Thank you for your order!', expectedErrorMessage='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithDynamicData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:47:41 IST" name="teardown" finished-at="2025-10-03T23:47:42 IST" duration-ms="841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithDynamicData status=SUCCESS method=TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:47:42 IST" name="setup" finished-at="2025-10-03T23:47:44 IST" duration-ms="2942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:47:44 IST" name="verifyPurchaseFlowWithDynamicData" description="Verify end-to-end purchase flow with dynamic product and checkout data." data-provider="purchaseScenarios" finished-at="2025-10-03T23:48:29 IST" duration-ms="44408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Single Item Purchase - Bolt T-Shirt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PurchaseScenario{scenarioName='Single Item Purchase - Bolt T-Shirt', productsToAdd=[Sauce Labs Bolt T-Shirt], checkoutDetails=CheckoutDetails{firstName='Jane', lastName='Smith', zipCode='67890'}, expectedItemTotal='15.99', expectedTax='1.28', expectedGrandTotal='17.27', expectedConfirmationMessage='Thank you for your order!', expectedErrorMessage='null'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithDynamicData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:48:29 IST" name="teardown" finished-at="2025-10-03T23:48:30 IST" duration-ms="826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithDynamicData status=SUCCESS method=TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:48:30 IST" name="setup" finished-at="2025-10-03T23:48:32 IST" duration-ms="2587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:48:32 IST" name="verifyPurchaseFlowWithDynamicData" description="Verify end-to-end purchase flow with dynamic product and checkout data." data-provider="purchaseScenarios" finished-at="2025-10-03T23:48:57 IST" duration-ms="24454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Error Scenario - Empty Zip Code]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PurchaseScenario{scenarioName='Error Scenario - Empty Zip Code', productsToAdd=[Sauce Labs Backpack], checkoutDetails=CheckoutDetails{firstName='Error', lastName='User', zipCode=''}, expectedItemTotal='null', expectedTax='null', expectedGrandTotal='null', expectedConfirmationMessage='null', expectedErrorMessage='Error: Postal Code is required'}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithDynamicData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:48:57 IST" name="teardown" finished-at="2025-10-03T23:48:58 IST" duration-ms="807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithDynamicData status=SUCCESS method=TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:48:58 IST" name="setup" finished-at="2025-10-03T23:49:00 IST" duration-ms="2895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method retried="true" signature="verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:49:00 IST" name="verifyPurchaseFlowWithDynamicData" description="Verify end-to-end purchase flow with dynamic product and checkout data." data-provider="purchaseScenarios" finished-at="2025-10-03T23:50:04 IST" duration-ms="63781" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Error Scenario - No Products Selected]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PurchaseScenario{scenarioName='Error Scenario - No Products Selected', productsToAdd=[], checkoutDetails=CheckoutDetails{firstName='Empty', lastName='Cart', zipCode='10000'}, expectedItemTotal='null', expectedTax='null', expectedGrandTotal='null', expectedConfirmationMessage='null', expectedErrorMessage='Error: Your cart is empty.'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message should be displayed. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message should be displayed. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.sauceDemo.testCases.TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(TC008_PurchaseFlowJson.java:138)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithDynamicData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:50:04 IST" name="teardown" finished-at="2025-10-03T23:50:05 IST" duration-ms="818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithDynamicData status=SKIP method=TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:50:05 IST" name="setup" finished-at="2025-10-03T23:50:08 IST" duration-ms="2977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:50:08 IST" name="verifyPurchaseFlowWithDynamicData" description="Verify end-to-end purchase flow with dynamic product and checkout data." data-provider="purchaseScenarios" finished-at="2025-10-03T23:51:12 IST" duration-ms="63840" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Error Scenario - No Products Selected]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PurchaseScenario{scenarioName='Error Scenario - No Products Selected', productsToAdd=[], checkoutDetails=CheckoutDetails{firstName='Empty', lastName='Cart', zipCode='10000'}, expectedItemTotal='null', expectedTax='null', expectedGrandTotal='null', expectedConfirmationMessage='null', expectedErrorMessage='Error: Your cart is empty.'}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message should be displayed. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message should be displayed. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.sauceDemo.testCases.TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(TC008_PurchaseFlowJson.java:138)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPurchaseFlowWithDynamicData -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59]" started-at="2025-10-03T23:51:12 IST" name="teardown" finished-at="2025-10-03T23:51:13 IST" duration-ms="827" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPurchaseFlowWithDynamicData status=FAILURE method=TC008_PurchaseFlowJson.verifyPurchaseFlowWithDynamicData(java.lang.String,com.sauceDemo.pojoClasses.PurchaseScenario)[pri:0, instance:com.sauceDemo.testCases.TC008_PurchaseFlowJson@24e08d59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC008_PurchaseFlowJson -->
      <class name="com.sauceDemo.testCases.TC003_CheckoutTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:42:57 IST" name="setup" finished-at="2025-10-03T23:42:59 IST" duration-ms="2747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="loginAndAddProduct()[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:42:59 IST" name="loginAndAddProduct" finished-at="2025-10-03T23:43:11 IST" duration-ms="12092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAndAddProduct -->
        <test-method signature="testSuccessfulProductCheckout()[pri:1, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:43:11 IST" name="testSuccessfulProductCheckout" description="Verify successful product checkout flow" finished-at="2025-10-03T23:43:54 IST" duration-ms="42932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulProductCheckout -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:43:54 IST" name="teardown" finished-at="2025-10-03T23:43:55 IST" duration-ms="858" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSuccessfulProductCheckout status=SUCCESS method=TC003_CheckoutTest.testSuccessfulProductCheckout()[pri:1, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:43:55 IST" name="setup" finished-at="2025-10-03T23:43:58 IST" duration-ms="2508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="loginAndAddProduct()[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:43:58 IST" name="loginAndAddProduct" finished-at="2025-10-03T23:44:10 IST" duration-ms="12087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAndAddProduct -->
        <test-method signature="testCancelCheckoutFromInformationPage()[pri:2, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:44:10 IST" name="testCancelCheckoutFromInformationPage" description="Verify cancelling checkout from information page" finished-at="2025-10-03T23:44:31 IST" duration-ms="20880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancelCheckoutFromInformationPage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4]" started-at="2025-10-03T23:44:31 IST" name="teardown" finished-at="2025-10-03T23:44:32 IST" duration-ms="838" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCancelCheckoutFromInformationPage status=SUCCESS method=TC003_CheckoutTest.testCancelCheckoutFromInformationPage()[pri:2, instance:com.sauceDemo.testCases.TC003_CheckoutTest@b18c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC003_CheckoutTest -->
      <class name="com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest">
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:32 IST" name="setup" finished-at="2025-10-03T23:44:34 IST" duration-ms="2674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method retried="true" signature="testInvalidLoginForScreenshot()[pri:1, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:34 IST" name="testInvalidLoginForScreenshot" description="Verify that a screenshot is taken on failed login due to incorrect credentials" finished-at="2025-10-03T23:44:36 IST" duration-ms="2102" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message for invalid login is incorrect. expected [Epic sadface: This is an incorrect error message to force failure] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message for invalid login is incorrect. expected [Epic sadface: This is an incorrect error message to force failure] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest.testInvalidLoginForScreenshot(TC004_FailedLoginScreenshotTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginForScreenshot -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:36 IST" name="teardown" finished-at="2025-10-03T23:44:37 IST" duration-ms="709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginForScreenshot status=SKIP method=TC004_FailedLoginScreenshotTest.testInvalidLoginForScreenshot()[pri:1, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:37 IST" name="setup" finished-at="2025-10-03T23:44:40 IST" duration-ms="2881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLoginForScreenshot()[pri:1, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:40 IST" name="testInvalidLoginForScreenshot" description="Verify that a screenshot is taken on failed login due to incorrect credentials" finished-at="2025-10-03T23:44:42 IST" duration-ms="1850" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message for invalid login is incorrect. expected [Epic sadface: This is an incorrect error message to force failure] but found [Epic sadface: Username and password do not match any user in this service]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message for invalid login is incorrect. expected [Epic sadface: This is an incorrect error message to force failure] but found [Epic sadface: Username and password do not match any user in this service]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest.testInvalidLoginForScreenshot(TC004_FailedLoginScreenshotTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginForScreenshot -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:42 IST" name="teardown" finished-at="2025-10-03T23:44:43 IST" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginForScreenshot status=FAILURE method=TC004_FailedLoginScreenshotTest.testInvalidLoginForScreenshot()[pri:1, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:43 IST" name="setup" finished-at="2025-10-03T23:44:46 IST" duration-ms="2915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method retried="true" signature="testLockedOutUserLoginForScreenshot()[pri:2, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:46 IST" name="testLockedOutUserLoginForScreenshot" description="Verify that a screenshot is taken when a locked out user tries to login" finished-at="2025-10-03T23:44:48 IST" duration-ms="1968" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message for locked out user is incorrect. expected [Epic sadface: Intentional wrong message for screenshot] but found [Epic sadface: Sorry, this user has been locked out.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message for locked out user is incorrect. expected [Epic sadface: Intentional wrong message for screenshot] but found [Epic sadface: Sorry, this user has been locked out.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest.testLockedOutUserLoginForScreenshot(TC004_FailedLoginScreenshotTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLockedOutUserLoginForScreenshot -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:48 IST" name="teardown" finished-at="2025-10-03T23:44:48 IST" duration-ms="701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLockedOutUserLoginForScreenshot status=SKIP method=TC004_FailedLoginScreenshotTest.testLockedOutUserLoginForScreenshot()[pri:2, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.String,boolean,boolean,org.testng.ITestContext)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:48 IST" name="setup" finished-at="2025-10-03T23:44:51 IST" duration-ms="2872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[org.testng.TestRunner@69c6fc5a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLockedOutUserLoginForScreenshot()[pri:2, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:51 IST" name="testLockedOutUserLoginForScreenshot" description="Verify that a screenshot is taken when a locked out user tries to login" finished-at="2025-10-03T23:44:53 IST" duration-ms="1796" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Error message for locked out user is incorrect. expected [Epic sadface: Intentional wrong message for screenshot] but found [Epic sadface: Sorry, this user has been locked out.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Error message for locked out user is incorrect. expected [Epic sadface: Intentional wrong message for screenshot] but found [Epic sadface: Sorry, this user has been locked out.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest.testLockedOutUserLoginForScreenshot(TC004_FailedLoginScreenshotTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLockedOutUserLoginForScreenshot -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168]" started-at="2025-10-03T23:44:53 IST" name="teardown" finished-at="2025-10-03T23:44:54 IST" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLockedOutUserLoginForScreenshot status=FAILURE method=TC004_FailedLoginScreenshotTest.testLockedOutUserLoginForScreenshot()[pri:2, instance:com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest@5c748168] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.sauceDemo.testCases.TC004_FailedLoginScreenshotTest -->
    </test> <!-- EDGE Standard Tests -->
  </suite> <!-- SauceDemo Automation Suite -->
</testng-results>
